apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: ${NAMESPACE}
  labels:
    app: postgres
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ${NAMESPACE}
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: ${POSTGIS_DOCKER_IMAGE}
          imagePullPolicy: "IfNotPresent"
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["/bin/sh", "-c", "python3", "/opt/setup_goat.py", "-t", "new_setup"]
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secrets
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /opt/config/db
              name: postgres-goat-secrets
            - mountPath: /opt/data
              name: postgredb
              subPath: ${NAMESPACE}
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: postgres-goat-secrets
          secret:
            secretName: postgres-goat-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ${NAMESPACE}
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
