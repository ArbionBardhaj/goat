name: Push

on:
  push:
    branches: [ ffb,bogota,hasenbergl,muenchen,freising,test_travis,github-actions ]

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Get changed files 
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '
      - name: Install tools
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.1/sops_3.7.1_amd64.deb
          sudo dpkg -i sops_3.7.1_amd64.deb
          sops -v 
      - name: Release changed client
        if: contains(steps.get_file_changes.outputs.files, 'app/client') || contains(github.event.head_commit.message, 'trigger build')
        run: make release-docker-image -e COMPONENT=client
      - name: Release changed api
        if: contains(steps.get_file_changes.outputs.files, 'app/api') || contains(github.event.head_commit.message, 'trigger build')
        run: make release-docker-image -e COMPONENT=api
      - name: Release changed cron
        if: contains(steps.get_file_changes.outputs.files, 'app/cron') || contains(github.event.head_commit.message, 'trigger build')
        run: make release-docker-image-app-context -e COMPONENT=cron 
      - name: Release changed database
        if: contains(steps.get_file_changes.outputs.files, 'app/database') || contains(github.event.head_commit.message, 'trigger build')
        run: make release-database-docker-image
  deploy:
    runs-on: ubuntu-latest
    needs: [release]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Get changed files 
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '
      - name: Install tools
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.1/sops_3.7.1_amd64.deb
          sudo dpkg -i sops_3.7.1_amd64.deb
          sops -v 
      - name: Echo domain
        run: |
          export DOMAIN=${GITHUB_REF##refs/heads/}.open-accessibility.org
          echo $DOMAIN
      - name: Deploy changed client
        if: contains(steps.get_file_changes.outputs.files, 'app/client') || contains(github.event.head_commit.message, 'trigger build')
        run: make deploy -e COMPONENT=client -e NAMESPACE=${GITHUB_REF##refs/heads/} -e DOMAIN=${GITHUB_REF##refs/heads/}.open-accessibility.org
      - name: Deploy changed api
        if: contains(steps.get_file_changes.outputs.files, 'app/api') || contains(github.event.head_commit.message, 'trigger build')
        run: sops -d k8s/api-secrets.sops.yaml > k8s/api-secrets.tpl.yaml && make deploy -e COMPONENT=api -e NAMESPACE=${GITHUB_REF##refs/heads/} -e DOMAIN=${GITHUB_REF##refs/heads/}.open-accessibility.org
      - name: Deploy changed cron
        if: contains(steps.get_file_changes.outputs.files, 'app/cron') || contains(github.event.head_commit.message, 'trigger build')
        run: sops -d k8s/cron-secrets.sops.yaml > k8s/cron-secrets.tpl.yaml && make deploy -e COMPONENT=cron -e NAMESPACE=${GITHUB_REF##refs/heads/} -e DOMAIN=${GITHUB_REF##refs/heads/}.open-accessibility.org
      - name: Deploy changed database
        if: contains(steps.get_file_changes.outputs.files, 'app/database') || contains(github.event.head_commit.message, 'trigger build')
        run: sops -d k8s/postgres-secrets.sops.yaml > k8s/postgres-secrets.tpl.yaml && make deploy-postgres-server -e NAMESPACE=${GITHUB_REF##refs/heads/} -e DOMAIN=${GITHUB_REF##refs/heads/}.open-accessibility.org
      
      